/booking/create/{id}:
  post:
    tags:
      - Booking
    summary: Create Booking
    description: Create a new booking
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the event to book
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              tickets:
                type: number
                example: 10
            required:
              - tickets
    responses:
      "201":
        description: Booking created successfully
      "400":
        description: Booking with that event and user already Exists
      "401":
        description: "Unauthorized"
      "500":
        description: Internal Server error
/booking/all:
  get:
    tags:
      - Booking
    summary: Get all Bookings
    description: Get all bookings
    security:
      - bearerAuth: []
    responses:
      "200":
        description: Bookings retrieved successfully
      "401":
        description: "Unauthorized"
      "500":
        description: Internal Server error
/booking/single/{id}:
  get:
    tags:
      - Booking
    summary: Get Booking
    description: Get a booking by ID
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the booking to get
        schema:
          type: string
    responses:
      "200":
        description: Booking retrieved successfully
      "401":
        description: "Unauthorized"
      "500":
        description: Internal Server error
/booking/update/{id}:
  put:
    tags:
      - Booking
    summary: Update Booking
    description: Update a booking by ID
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the booking to update
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              event:
                type: string
                example: Event ID
              user:
                type: string
                example: User ID
              ticket:
                type: string
                example: Ticket ID
              quantity:
                type: integer
                example: 2
            required:
              - event
              - user
              - ticket
              - quantity
    responses:
      "200":
        description: Booking updated successfully
      "401":
        description: "Unauthorized"
      "500":
        description: Internal Server error
/booking/delete/{id}:
  delete:
    tags:
      - Booking
    summary: Cancel Booking
    description: Cancel a booking by ID
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the booking to Cancel
        schema:
          type: string
    responses:
      "200":
        description: Booking deleted successfully
      "401":
        description: "Unauthorized"
      "500":
        description: Internal Server error
/booking/mybookings:
  get:
    tags:
      - Booking
    summary: Get my Bookings
    description: Get all bookings for the logged in user
    security:
      - bearerAuth: []
    responses:
      "200":
        description: Bookings retrieved successfully
      "401":
        description: "Unauthorized"
      "500":
        description: Internal Server error